parser_version(d0689b4284ef8b0d4a9ef135d859f5f774cb4819).
classical_b('Spaceship',['D:\\IIT SE\\4. FOURTH YEAR\\Reasoning about Programs\\Atelier B\\Approch2_SEES\\Spaceship.mch','D:\\IIT SE\\4. FOURTH YEAR\\Reasoning about Programs\\Atelier B\\Approch2_SEES\\SpaceRegion.mch']).
machine(abstract_machine(p5(2,5,1,38,4),machine(p4(2,5,1,8)),machine_header(p4(2,6,5,16),'SpaceRegion',[]),[constants(p5(2,8,1,15,19),[identifier(p4(2,9,5,16),'SpaceAxis_X'),identifier(p4(2,10,5,16),'SpaceAxis_Y'),identifier(p4(2,11,5,12),'SpaceXY'),identifier(p4(2,12,5,14),'Asteroids'),identifier(p4(2,13,5,17),'EmptySpaceXY'),identifier(p4(2,14,5,19),'HomebaseSquare'),identifier(p4(2,15,5,19),'StarbaseSquare')]),properties(p5(2,17,1,36,62),conjunct(p5(2,19,5,36,62),conjunct(p5(2,19,5,36,34),conjunct(p5(2,19,5,35,62),conjunct(p5(2,19,5,35,34),conjunct(p5(2,19,5,32,73),conjunct(p5(2,19,5,32,35),conjunct(p5(2,19,5,31,39),conjunct(p5(2,19,5,28,141),conjunct(p5(2,19,5,27,25),conjunct(p5(2,19,5,24,40),conjunct(p5(2,19,5,23,42),conjunct(p5(2,19,5,20,49),conjunct(p5(2,19,5,20,28),conjunct(p4(2,19,5,50),subset(p4(2,19,5,28),identifier(p4(2,19,5,16),'SpaceAxis_X'),natural1_set(p4(2,19,20,28))),equal(p4(2,19,31,50),identifier(p4(2,19,31,42),'SpaceAxis_X'),interval(p4(2,19,45,50),integer(p4(2,19,45,46),1),integer(p4(2,19,48,50),12)))),subset(p4(2,20,5,28),identifier(p4(2,20,5,16),'SpaceAxis_Y'),natural1_set(p4(2,20,20,28)))),equal(p4(2,20,31,49),identifier(p4(2,20,31,42),'SpaceAxis_Y'),interval(p4(2,20,45,49),integer(p4(2,20,45,46),1),integer(p4(2,20,48,49),7)))),member(p4(2,23,5,42),identifier(p4(2,23,5,12),'SpaceXY'),relations(p4(2,23,15,42),identifier(p4(2,23,15,26),'SpaceAxis_X'),identifier(p4(2,23,31,42),'SpaceAxis_Y')))),equal(p4(2,24,5,40),identifier(p4(2,24,5,12),'SpaceXY'),mult_or_cart(p4(2,24,15,40),identifier(p4(2,24,15,26),'SpaceAxis_X'),identifier(p4(2,24,29,40),'SpaceAxis_Y')))),subset(p4(2,27,5,25),identifier(p4(2,27,5,14),'Asteroids'),identifier(p4(2,27,18,25),'SpaceXY'))),equal(p4(2,28,5,141),identifier(p4(2,28,5,14),'Asteroids'),set_extension(p4(2,28,17,141),[couple(p4(2,28,19,26),[integer(p4(2,28,19,20),3),integer(p4(2,28,25,26),2)]),couple(p4(2,28,30,37),[integer(p4(2,28,30,31),3),integer(p4(2,28,36,37),5)]),couple(p4(2,28,41,48),[integer(p4(2,28,41,42),5),integer(p4(2,28,47,48),4)]),couple(p4(2,28,52,59),[integer(p4(2,28,52,53),6),integer(p4(2,28,58,59),7)]),couple(p4(2,28,63,70),[integer(p4(2,28,63,64),7),integer(p4(2,28,69,70),1)]),couple(p4(2,28,74,81),[integer(p4(2,28,74,75),7),integer(p4(2,28,80,81),5)]),couple(p4(2,28,85,92),[integer(p4(2,28,85,86),7),integer(p4(2,28,91,92),7)]),couple(p4(2,28,96,103),[integer(p4(2,28,96,97),8),integer(p4(2,28,102,103),3)]),couple(p4(2,28,107,115),[integer(p4(2,28,107,109),10),integer(p4(2,28,114,115),6)]),couple(p4(2,28,119,127),[integer(p4(2,28,119,121),11),integer(p4(2,28,126,127),2)]),couple(p4(2,28,131,139),[integer(p4(2,28,131,133),12),integer(p4(2,28,138,139),5)])]))),equal(p4(2,31,5,39),identifier(p4(2,31,5,17),'EmptySpaceXY'),minus_or_set_subtract(p4(2,31,20,39),identifier(p4(2,31,20,27),'SpaceXY'),identifier(p4(2,31,30,39),'Asteroids')))),equal(p4(2,32,5,35),intersection(p4(2,32,5,30),identifier(p4(2,32,5,17),'EmptySpaceXY'),identifier(p4(2,32,21,30),'Asteroids')),empty_set(p4(2,32,33,35)))),equal(p4(2,32,38,73),union(p4(2,32,38,63),identifier(p4(2,32,38,50),'EmptySpaceXY'),identifier(p4(2,32,54,63),'Asteroids')),identifier(p4(2,32,66,73),'SpaceXY'))),member(p4(2,35,5,34),identifier(p4(2,35,5,19),'HomebaseSquare'),identifier(p4(2,35,22,34),'EmptySpaceXY'))),equal(p4(2,35,37,62),identifier(p4(2,35,37,51),'HomebaseSquare'),couple(p4(2,35,55,62),[integer(p4(2,35,55,56),1),integer(p4(2,35,61,62),1)]))),member(p4(2,36,5,34),identifier(p4(2,36,5,19),'StarbaseSquare'),identifier(p4(2,36,22,34),'EmptySpaceXY'))),equal(p4(2,36,37,62),identifier(p4(2,36,37,51),'StarbaseSquare'),couple(p4(2,36,55,62),[integer(p4(2,36,55,56),6),integer(p4(2,36,61,62),4)]))))])).
machine(abstract_machine(p5(1,5,1,337,4),machine(p3(5,1,8)),machine_header(p3(6,5,14),'Spaceship',[]),[sees(p5(1,8,1,9,16),[identifier(p3(9,5,16),'SpaceRegion')]),sets(p5(1,11,1,25,55),[enumerated_set(p3(13,5,82),'MOVEMENT_TYPE',[identifier(p3(13,22,29),'MOVE_UP'),identifier(p3(13,31,40),'MOVE_DOWN'),identifier(p3(13,42,54),'MOVE_FORWARD'),identifier(p3(13,56,69),'MOVE_BACKWARD'),identifier(p3(13,71,81),'WARP_DRIVE')]),enumerated_set(p5(1,16,5,19,122),'REPORT_MESSAGE',[identifier(p3(16,23,44),'SUCCESSFULLY_MOVED_UP'),identifier(p3(16,45,68),'SUCCESSFULLY_MOVED_DOWN'),identifier(p3(16,70,96),'SUCCESSFULLY_MOVED_FORWARD'),identifier(p3(16,98,125),'SUCCESSFULLY_MOVED_BACKWARD'),identifier(p3(16,127,146),'SUCCESSFULLY_WARPED'),identifier(p3(17,23,58),'CANNOT_MOVE_UP_DUE_TO_SPACE_BOUNDRY'),identifier(p3(17,60,97),'CANNOT_MOVE_DOWN_DUE_TO_SPACE_BOUNDRY'),identifier(p3(17,99,139),'CANNOT_MOVE_FORWARD_DUE_TO_SPACE_BOUNDRY'),identifier(p3(17,141,182),'CANNOT_MOVE_BACKWARD_DUE_TO_SPACE_BOUNDRY'),identifier(p3(18,23,55),'CANNOT_WARP_DUE_TO_SPACE_BOUNDRY'),identifier(p3(18,57,75),'ASTEROID_COLLISION'),identifier(p3(18,77,95),'INSUFFICIENT_POWER'),identifier(p3(19,23,48),'CANNOT_WARP_INTO_ASTEROID'),identifier(p3(19,50,82),'CANNOT_WARP_TO_THE_SAME_POSITION'),identifier(p3(19,84,121),'CANNOT_IMMEDIATELY_WARP_INTO_STARBASE')]),enumerated_set(p3(22,5,65),'DOCKED_STATUS',[identifier(p3(22,22,40),'DOCKED_AT_STARBASE'),identifier(p3(22,42,64),'NOT_DOCKED_AT_STARBASE')]),enumerated_set(p3(25,5,55),'GAME_STATUS',[identifier(p3(25,20,28),'GAME_WON'),identifier(p3(25,30,39),'GAME_LOST'),identifier(p3(25,41,54),'GAME_NOT_OVER')])]),constants(p5(1,27,1,31,34),[identifier(p3(28,5,17),'InitialPower'),identifier(p3(29,5,23),'PowerForNormalMove'),identifier(p3(30,5,22),'PowerForWarpDrive'),identifier(p3(31,5,34),'PowerLossForAsteroidCollision')]),properties(p5(1,33,1,37,39),conjunct(p5(1,34,5,37,39),conjunct(p5(1,34,5,36,27),conjunct(p5(1,34,5,35,27),equal(p3(34,5,23),identifier(p3(34,5,17),'InitialPower'),integer(p3(34,20,23),100)),equal(p3(35,5,27),identifier(p3(35,5,23),'PowerForNormalMove'),integer(p3(35,26,27),5))),equal(p3(36,5,27),identifier(p3(36,5,22),'PowerForWarpDrive'),integer(p3(36,25,27),20))),equal(p3(37,5,39),identifier(p3(37,5,34),'PowerLossForAsteroidCollision'),integer(p3(37,37,39),10)))),definitions(p5(1,40,1,56,232),[predicate_definition(p3(45,5,58),isDocked,[],equal(p3(45,18,58),couple(p3(45,18,41),[identifier(p3(45,18,27),xPosition),identifier(p3(45,32,41),yPosition)]),identifier(p3(45,44,58),'StarbaseSquare'))),predicate_definition(p3(42,5,91),checkWithinSpaceRegion,[identifier(p3(42,28,38),xCordinate),identifier(p3(42,40,50),yCordinate)],member(p3(42,56,91),couple(p3(42,56,81),[identifier(p3(42,56,66),xCordinate),identifier(p3(42,71,81),yCordinate)]),identifier(p3(42,84,91),'SpaceXY'))),expression_definition(p3(50,5,45),'ANIMATION_IMG1',[],string(p3(50,23,45),'images/Asteroids.gif')),expression_definition(p3(55,5,162),'ANIMATION_FUNCTION2',[],comprehension_set(p3(55,30,162),[identifier(p3(55,32,35),row),identifier(p3(55,37,43),column),identifier(p3(55,45,48),img)],conjunct(p3(55,51,160),conjunct(p3(55,51,150),conjunct(p3(55,51,128),conjunct(p3(55,51,107),member(p3(55,51,76),identifier(p3(55,51,54),row),interval(p3(55,55,76),integer(p3(55,55,56),1),max(p3(55,58,76),identifier(p3(55,63,74),'SpaceAxis_Y')))),member(p3(55,79,107),identifier(p3(55,79,85),column),interval(p3(55,86,107),integer(p3(55,86,87),1),max(p3(55,89,107),identifier(p3(55,94,105),'SpaceAxis_X'))))),equal(p3(55,110,128),identifier(p3(55,110,116),column),identifier(p3(55,119,128),xPosition))),equal(p3(55,131,150),identifier(p3(55,131,134),row),minus_or_set_subtract(p3(55,137,150),integer(p3(55,137,138),8),identifier(p3(55,141,150),yPosition)))),equal(p3(55,153,160),identifier(p3(55,153,156),img),integer(p3(55,159,160),2))))),expression_definition(p3(49,5,47),'ANIMATION_IMG0',[],string(p3(49,23,47),'images/EmptySquare.gif')),expression_definition(p3(54,5,153),'ANIMATION_FUNCTION1',[],comprehension_set(p3(54,30,153),[identifier(p3(54,32,35),row),identifier(p3(54,37,43),column),identifier(p3(54,45,48),img)],conjunct(p3(54,51,151),conjunct(p3(54,51,141),conjunct(p3(54,51,107),member(p3(54,51,76),identifier(p3(54,51,54),row),interval(p3(54,55,76),integer(p3(54,55,56),1),max(p3(54,58,76),identifier(p3(54,63,74),'SpaceAxis_Y')))),member(p3(54,79,107),identifier(p3(54,79,85),column),interval(p3(54,86,107),integer(p3(54,86,87),1),max(p3(54,89,107),identifier(p3(54,94,105),'SpaceAxis_X'))))),member(p3(54,110,141),couple(p3(54,110,129),[identifier(p3(54,112,118),column),minus_or_set_subtract(p3(54,120,127),integer(p3(54,120,121),8),identifier(p3(54,124,127),row))]),identifier(p3(54,132,141),'Asteroids'))),equal(p3(54,144,151),identifier(p3(54,144,147),img),integer(p3(54,150,151),1))))),expression_definition(p3(52,5,44),'ANIMATION_IMG3',[],string(p3(52,23,44),'images/Starbase.gif')),expression_definition(p3(51,5,45),'ANIMATION_IMG2',[],string(p3(51,23,45),'images/Spaceship.gif')),predicate_definition(p3(43,5,93),checkAsteroidCollision,[identifier(p3(43,28,38),xCordinate),identifier(p3(43,40,50),yCordinate)],member(p3(43,56,93),couple(p3(43,56,81),[identifier(p3(43,56,66),xCordinate),identifier(p3(43,71,81),yCordinate)]),identifier(p3(43,84,93),'Asteroids'))),predicate_definition(p3(46,5,62),isGameFinished,[],disjunct(p3(46,23,62),definition(p3(46,23,31),isDocked,[]),less(p3(46,36,62),identifier(p3(46,36,41),power),identifier(p3(46,44,62),'PowerForNormalMove')))),expression_definition(p3(56,5,232),'ANIMATION_FUNCTION3',[],comprehension_set(p3(56,30,232),[identifier(p3(56,32,35),row),identifier(p3(56,37,43),column),identifier(p3(56,45,48),img)],conjunct(p3(56,51,230),conjunct(p3(56,51,220),conjunct(p3(56,51,165),conjunct(p3(56,51,107),member(p3(56,51,76),identifier(p3(56,51,54),row),interval(p3(56,55,76),integer(p3(56,55,56),1),max(p3(56,58,76),identifier(p3(56,63,74),'SpaceAxis_Y')))),member(p3(56,79,107),identifier(p3(56,79,85),column),interval(p3(56,86,107),integer(p3(56,86,87),1),max(p3(56,89,107),identifier(p3(56,94,105),'SpaceAxis_X'))))),equal(p3(56,110,165),identifier(p3(56,110,116),column),function(p3(56,119,165),first_projection(p3(56,119,149),identifier(p3(56,124,135),'SpaceAxis_X'),identifier(p3(56,137,148),'SpaceAxis_Y')),[identifier(p3(56,150,164),'StarbaseSquare')]))),equal(p3(56,168,220),identifier(p3(56,168,171),row),function(p3(56,174,220),second_projection(p3(56,174,204),identifier(p3(56,179,190),'SpaceAxis_X'),identifier(p3(56,192,203),'SpaceAxis_Y')),[identifier(p3(56,205,219),'StarbaseSquare')]))),equal(p3(56,223,230),identifier(p3(56,223,226),img),integer(p3(56,229,230),3))))),predicate_definition(p3(44,5,78),checkPower,[identifier(p3(44,16,28),currentPower),identifier(p3(44,30,43),reducingPower)],greater_equal(p3(44,49,78),identifier(p3(44,49,61),currentPower),identifier(p3(44,65,78),reducingPower))),expression_definition(p3(53,5,163),'ANIMATION_FUNCTION_DEFAULT',[],comprehension_set(p3(53,37,163),[identifier(p3(53,39,42),row),identifier(p3(53,44,50),column),identifier(p3(53,52,55),img)],conjunct(p3(53,58,161),conjunct(p3(53,58,151),conjunct(p3(53,58,114),member(p3(53,58,83),identifier(p3(53,58,61),row),interval(p3(53,62,83),integer(p3(53,62,63),1),max(p3(53,65,83),identifier(p3(53,70,81),'SpaceAxis_Y')))),member(p3(53,86,114),identifier(p3(53,86,92),column),interval(p3(53,93,114),integer(p3(53,93,94),1),max(p3(53,96,114),identifier(p3(53,101,112),'SpaceAxis_X'))))),member(p3(53,117,151),couple(p3(53,117,136),[identifier(p3(53,119,125),column),minus_or_set_subtract(p3(53,127,134),integer(p3(53,127,128),8),identifier(p3(53,131,134),row))]),identifier(p3(53,139,151),'EmptySpaceXY'))),equal(p3(53,154,161),identifier(p3(53,154,157),img),integer(p3(53,160,161),0)))))]),variables(p5(1,58,1,64,23),[identifier(p3(59,5,14),xPosition),identifier(p3(60,5,14),yPosition),identifier(p3(61,5,10),power),identifier(p3(62,5,14),movements),identifier(p3(63,5,17),missionRoute),identifier(p3(64,5,23),numberOfCollisions)]),invariant(p5(1,66,1,71,33),conjunct(p5(1,67,5,71,33),conjunct(p5(1,67,5,70,70),conjunct(p5(1,67,5,70,35),conjunct(p5(1,67,5,69,20),conjunct(p5(1,67,5,68,43),conjunct(p3(67,5,54),member(p3(67,5,28),identifier(p3(67,5,14),xPosition),identifier(p3(67,17,28),'SpaceAxis_X')),member(p3(67,31,54),identifier(p3(67,31,40),yPosition),identifier(p3(67,43,54),'SpaceAxis_Y'))),member(p3(68,5,43),couple(p3(68,5,28),[identifier(p3(68,5,14),xPosition),identifier(p3(68,19,28),yPosition)]),identifier(p3(68,31,43),'EmptySpaceXY'))),member(p3(69,5,20),identifier(p3(69,5,10),power),integer_set(p3(69,13,20)))),member(p3(70,5,35),identifier(p3(70,5,14),movements),seq(p3(70,17,35),identifier(p3(70,21,34),'MOVEMENT_TYPE')))),member(p3(70,38,70),identifier(p3(70,38,50),missionRoute),seq(p3(70,53,70),identifier(p3(70,57,69),'EmptySpaceXY')))),member(p3(71,5,33),identifier(p3(71,5,23),numberOfCollisions),integer_set(p3(71,26,33))))),initialisation(p5(1,73,1,78,28),parallel(p5(1,74,5,78,28),[assign(p3(74,5,64),[identifier(p3(74,5,14),xPosition)],[function(p3(74,18,64),first_projection(p3(74,18,48),identifier(p3(74,23,34),'SpaceAxis_X'),identifier(p3(74,36,47),'SpaceAxis_Y')),[identifier(p3(74,49,63),'HomebaseSquare')])]),assign(p3(75,5,64),[identifier(p3(75,5,14),yPosition)],[function(p3(75,18,64),second_projection(p3(75,18,48),identifier(p3(75,23,34),'SpaceAxis_X'),identifier(p3(75,36,47),'SpaceAxis_Y')),[identifier(p3(75,49,63),'HomebaseSquare')])]),assign(p3(76,5,26),[identifier(p3(76,5,10),power)],[identifier(p3(76,14,26),'InitialPower')]),assign(p3(77,5,20),[identifier(p3(77,5,14),movements)],[empty_sequence(p3(77,18,20))]),assign(p3(77,24,56),[identifier(p3(77,24,36),missionRoute)],[sequence_extension(p3(77,40,56),[identifier(p3(77,41,55),'HomebaseSquare')])]),assign(p3(78,5,28),[identifier(p3(78,5,23),numberOfCollisions)],[integer(p3(78,27,28),0)])])),operations(p5(1,80,1,335,8),[operation(p5(1,82,5,90,8),identifier(p5(1,82,5,90,8),'NewGame'),[],[],precondition(p5(1,83,5,90,8),definition(p3(84,9,23),isGameFinished,[]),parallel(p5(1,86,9,89,60),[assign(p3(86,9,30),[identifier(p3(86,9,14),power)],[identifier(p3(86,18,30),'InitialPower')]),assign(p3(87,9,32),[identifier(p3(87,9,27),numberOfCollisions)],[integer(p3(87,31,32),0)]),assign(p3(88,9,68),[identifier(p3(88,9,18),xPosition)],[function(p3(88,22,68),first_projection(p3(88,22,52),identifier(p3(88,27,38),'SpaceAxis_X'),identifier(p3(88,40,51),'SpaceAxis_Y')),[identifier(p3(88,53,67),'HomebaseSquare')])]),assign(p3(88,72,131),[identifier(p3(88,72,81),yPosition)],[function(p3(88,85,131),second_projection(p3(88,85,115),identifier(p3(88,90,101),'SpaceAxis_X'),identifier(p3(88,103,114),'SpaceAxis_Y')),[identifier(p3(88,116,130),'HomebaseSquare')])]),assign(p3(89,9,41),[identifier(p3(89,9,21),missionRoute)],[sequence_extension(p3(89,25,41),[identifier(p3(89,26,40),'HomebaseSquare')])]),assign(p3(89,45,60),[identifier(p3(89,45,54),movements)],[empty_sequence(p3(89,58,60))])]))),operation(p5(1,93,5,127,8),identifier(p5(1,93,5,127,8),'MoveUp'),[identifier(p3(93,5,18),reportMessage)],[],precondition(p5(1,94,5,127,8),conjunct(p3(95,9,61),member(p3(95,9,39),identifier(p3(95,9,22),reportMessage),identifier(p3(95,25,39),'REPORT_MESSAGE')),negation(p3(95,42,61),definition(p3(95,46,60),isGameFinished,[]))),if(p5(1,97,9,126,12),definition(p3(98,13,49),checkPower,[identifier(p3(98,24,29),power),identifier(p3(98,31,49),'PowerForNormalMove')]),if(p5(1,100,13,123,16),definition(p3(101,17,64),checkWithinSpaceRegion,[identifier(p3(101,40,49),xPosition),add(p3(101,51,64),identifier(p3(101,51,60),yPosition),integer(p3(101,63,64),1))]),if(p5(1,103,17,120,20),definition(p3(104,21,68),checkAsteroidCollision,[identifier(p3(104,44,53),xPosition),add(p3(104,55,68),identifier(p3(104,55,64),yPosition),integer(p3(104,67,68),1))]),if(p5(1,106,21,114,24),definition(p3(107,25,93),checkPower,[identifier(p3(107,36,41),power),add(p3(107,43,93),identifier(p3(107,43,61),'PowerForNormalMove'),identifier(p3(107,64,93),'PowerLossForAsteroidCollision'))]),parallel(p5(1,109,25,111,97),[assign(p3(109,25,92),[identifier(p3(109,25,30),power)],[minus_or_set_subtract(p3(109,34,92),minus_or_set_subtract(p3(109,34,60),identifier(p3(109,34,39),power),identifier(p3(109,42,60),'PowerForNormalMove')),identifier(p3(109,63,92),'PowerLossForAsteroidCollision'))]),assign(p3(110,25,69),[identifier(p3(110,25,43),numberOfCollisions)],[add(p3(110,47,69),identifier(p3(110,47,65),numberOfCollisions),integer(p3(110,68,69),1))]),assign(p3(111,25,58),[identifier(p3(111,25,34),movements)],[insert_tail(p3(111,38,58),identifier(p3(111,38,47),movements),identifier(p3(111,51,58),'MOVE_UP'))]),assign(p3(111,62,97),[identifier(p3(111,62,75),reportMessage)],[identifier(p3(111,79,97),'ASTEROID_COLLISION')])]),[],assign(p3(113,25,60),[identifier(p3(113,25,38),reportMessage)],[identifier(p3(113,42,60),'INSUFFICIENT_POWER')])),[],parallel(p5(1,116,21,119,96),[assign(p3(116,21,56),[identifier(p3(116,21,26),power)],[minus_or_set_subtract(p3(116,30,56),identifier(p3(116,30,35),power),identifier(p3(116,38,56),'PowerForNormalMove'))]),assign(p3(117,21,47),[identifier(p3(117,21,30),yPosition)],[add(p3(117,34,47),identifier(p3(117,34,43),yPosition),integer(p3(117,46,47),1))]),assign(p3(118,21,81),[identifier(p3(118,21,33),missionRoute)],[insert_tail(p3(118,37,81),identifier(p3(118,37,49),missionRoute),couple(p3(118,54,81),[identifier(p3(118,54,63),xPosition),add(p3(118,68,81),identifier(p3(118,68,77),yPosition),integer(p3(118,80,81),1))]))]),assign(p3(119,21,54),[identifier(p3(119,21,30),movements)],[insert_tail(p3(119,34,54),identifier(p3(119,34,43),movements),identifier(p3(119,47,54),'MOVE_UP'))]),assign(p3(119,58,96),[identifier(p3(119,58,71),reportMessage)],[identifier(p3(119,75,96),'SUCCESSFULLY_MOVED_UP')])])),[],assign(p3(122,17,69),[identifier(p3(122,17,30),reportMessage)],[identifier(p3(122,34,69),'CANNOT_MOVE_UP_DUE_TO_SPACE_BOUNDRY')])),[],assign(p3(125,13,48),[identifier(p3(125,13,26),reportMessage)],[identifier(p3(125,30,48),'INSUFFICIENT_POWER')])))),operation(p5(1,130,5,164,8),identifier(p5(1,130,5,164,8),'MoveDown'),[identifier(p3(130,5,18),reportMessage)],[],precondition(p5(1,131,5,164,8),conjunct(p3(132,9,61),member(p3(132,9,39),identifier(p3(132,9,22),reportMessage),identifier(p3(132,25,39),'REPORT_MESSAGE')),negation(p3(132,42,61),definition(p3(132,46,60),isGameFinished,[]))),if(p5(1,134,9,163,12),definition(p3(135,13,49),checkPower,[identifier(p3(135,24,29),power),identifier(p3(135,31,49),'PowerForNormalMove')]),if(p5(1,137,13,160,16),definition(p3(138,17,64),checkWithinSpaceRegion,[identifier(p3(138,40,49),xPosition),minus_or_set_subtract(p3(138,51,64),identifier(p3(138,51,60),yPosition),integer(p3(138,63,64),1))]),if(p5(1,140,17,157,20),definition(p3(141,21,68),checkAsteroidCollision,[identifier(p3(141,44,53),xPosition),minus_or_set_subtract(p3(141,55,68),identifier(p3(141,55,64),yPosition),integer(p3(141,67,68),1))]),if(p5(1,143,21,151,24),definition(p3(144,25,93),checkPower,[identifier(p3(144,36,41),power),add(p3(144,43,93),identifier(p3(144,43,61),'PowerForNormalMove'),identifier(p3(144,64,93),'PowerLossForAsteroidCollision'))]),parallel(p5(1,146,25,148,99),[assign(p3(146,25,92),[identifier(p3(146,25,30),power)],[minus_or_set_subtract(p3(146,34,92),minus_or_set_subtract(p3(146,34,60),identifier(p3(146,34,39),power),identifier(p3(146,42,60),'PowerForNormalMove')),identifier(p3(146,63,92),'PowerLossForAsteroidCollision'))]),assign(p3(147,25,69),[identifier(p3(147,25,43),numberOfCollisions)],[add(p3(147,47,69),identifier(p3(147,47,65),numberOfCollisions),integer(p3(147,68,69),1))]),assign(p3(148,25,60),[identifier(p3(148,25,34),movements)],[insert_tail(p3(148,38,60),identifier(p3(148,38,47),movements),identifier(p3(148,51,60),'MOVE_DOWN'))]),assign(p3(148,64,99),[identifier(p3(148,64,77),reportMessage)],[identifier(p3(148,81,99),'ASTEROID_COLLISION')])]),[],assign(p3(150,25,60),[identifier(p3(150,25,38),reportMessage)],[identifier(p3(150,42,60),'INSUFFICIENT_POWER')])),[],parallel(p5(1,153,21,156,100),[assign(p3(153,21,56),[identifier(p3(153,21,26),power)],[minus_or_set_subtract(p3(153,30,56),identifier(p3(153,30,35),power),identifier(p3(153,38,56),'PowerForNormalMove'))]),assign(p3(154,21,47),[identifier(p3(154,21,30),yPosition)],[minus_or_set_subtract(p3(154,34,47),identifier(p3(154,34,43),yPosition),integer(p3(154,46,47),1))]),assign(p3(155,21,81),[identifier(p3(155,21,33),missionRoute)],[insert_tail(p3(155,37,81),identifier(p3(155,37,49),missionRoute),couple(p3(155,54,81),[identifier(p3(155,54,63),xPosition),minus_or_set_subtract(p3(155,68,81),identifier(p3(155,68,77),yPosition),integer(p3(155,80,81),1))]))]),assign(p3(156,21,56),[identifier(p3(156,21,30),movements)],[insert_tail(p3(156,34,56),identifier(p3(156,34,43),movements),identifier(p3(156,47,56),'MOVE_DOWN'))]),assign(p3(156,60,100),[identifier(p3(156,60,73),reportMessage)],[identifier(p3(156,77,100),'SUCCESSFULLY_MOVED_DOWN')])])),[],assign(p3(159,17,71),[identifier(p3(159,17,30),reportMessage)],[identifier(p3(159,34,71),'CANNOT_MOVE_DOWN_DUE_TO_SPACE_BOUNDRY')])),[],assign(p3(162,13,48),[identifier(p3(162,13,26),reportMessage)],[identifier(p3(162,30,48),'INSUFFICIENT_POWER')])))),operation(p5(1,167,5,201,8),identifier(p5(1,167,5,201,8),'MoveForward'),[identifier(p3(167,5,18),reportMessage)],[],precondition(p5(1,168,5,201,8),conjunct(p3(169,9,61),member(p3(169,9,39),identifier(p3(169,9,22),reportMessage),identifier(p3(169,25,39),'REPORT_MESSAGE')),negation(p3(169,42,61),definition(p3(169,46,60),isGameFinished,[]))),if(p5(1,171,9,200,12),definition(p3(172,13,49),checkPower,[identifier(p3(172,24,29),power),identifier(p3(172,31,49),'PowerForNormalMove')]),if(p5(1,174,13,197,16),definition(p3(175,17,64),checkWithinSpaceRegion,[add(p3(175,40,53),identifier(p3(175,40,49),xPosition),integer(p3(175,52,53),1)),identifier(p3(175,55,64),yPosition)]),if(p5(1,177,17,194,20),definition(p3(178,21,68),checkAsteroidCollision,[add(p3(178,44,57),identifier(p3(178,44,53),xPosition),integer(p3(178,56,57),1)),identifier(p3(178,59,68),yPosition)]),if(p5(1,180,21,188,24),definition(p3(181,25,93),checkPower,[identifier(p3(181,36,41),power),add(p3(181,43,93),identifier(p3(181,43,61),'PowerForNormalMove'),identifier(p3(181,64,93),'PowerLossForAsteroidCollision'))]),parallel(p5(1,183,25,185,102),[assign(p3(183,25,92),[identifier(p3(183,25,30),power)],[minus_or_set_subtract(p3(183,34,92),minus_or_set_subtract(p3(183,34,60),identifier(p3(183,34,39),power),identifier(p3(183,42,60),'PowerForNormalMove')),identifier(p3(183,63,92),'PowerLossForAsteroidCollision'))]),assign(p3(184,25,69),[identifier(p3(184,25,43),numberOfCollisions)],[add(p3(184,47,69),identifier(p3(184,47,65),numberOfCollisions),integer(p3(184,68,69),1))]),assign(p3(185,25,63),[identifier(p3(185,25,34),movements)],[insert_tail(p3(185,38,63),identifier(p3(185,38,47),movements),identifier(p3(185,51,63),'MOVE_FORWARD'))]),assign(p3(185,67,102),[identifier(p3(185,67,80),reportMessage)],[identifier(p3(185,84,102),'ASTEROID_COLLISION')])]),[],assign(p3(187,25,60),[identifier(p3(187,25,38),reportMessage)],[identifier(p3(187,42,60),'INSUFFICIENT_POWER')])),[],parallel(p5(1,190,21,193,106),[assign(p3(190,21,56),[identifier(p3(190,21,26),power)],[minus_or_set_subtract(p3(190,30,56),identifier(p3(190,30,35),power),identifier(p3(190,38,56),'PowerForNormalMove'))]),assign(p3(191,21,47),[identifier(p3(191,21,30),xPosition)],[add(p3(191,34,47),identifier(p3(191,34,43),xPosition),integer(p3(191,46,47),1))]),assign(p3(192,21,81),[identifier(p3(192,21,33),missionRoute)],[insert_tail(p3(192,37,81),identifier(p3(192,37,49),missionRoute),couple(p3(192,54,81),[add(p3(192,54,67),identifier(p3(192,54,63),xPosition),integer(p3(192,66,67),1)),identifier(p3(192,72,81),yPosition)]))]),assign(p3(193,21,59),[identifier(p3(193,21,30),movements)],[insert_tail(p3(193,34,59),identifier(p3(193,34,43),movements),identifier(p3(193,47,59),'MOVE_FORWARD'))]),assign(p3(193,63,106),[identifier(p3(193,63,76),reportMessage)],[identifier(p3(193,80,106),'SUCCESSFULLY_MOVED_FORWARD')])])),[],assign(p3(196,17,74),[identifier(p3(196,17,30),reportMessage)],[identifier(p3(196,34,74),'CANNOT_MOVE_FORWARD_DUE_TO_SPACE_BOUNDRY')])),[],assign(p3(199,13,48),[identifier(p3(199,13,26),reportMessage)],[identifier(p3(199,30,48),'INSUFFICIENT_POWER')])))),operation(p5(1,204,5,238,8),identifier(p5(1,204,5,238,8),'MoveBackward'),[identifier(p3(204,5,18),reportMessage)],[],precondition(p5(1,205,5,238,8),conjunct(p3(206,9,61),member(p3(206,9,39),identifier(p3(206,9,22),reportMessage),identifier(p3(206,25,39),'REPORT_MESSAGE')),negation(p3(206,42,61),definition(p3(206,46,60),isGameFinished,[]))),if(p5(1,208,9,237,12),definition(p3(209,13,49),checkPower,[identifier(p3(209,24,29),power),identifier(p3(209,31,49),'PowerForNormalMove')]),if(p5(1,211,13,234,16),definition(p3(212,17,64),checkWithinSpaceRegion,[minus_or_set_subtract(p3(212,40,53),identifier(p3(212,40,49),xPosition),integer(p3(212,52,53),1)),identifier(p3(212,55,64),yPosition)]),if(p5(1,214,17,231,20),definition(p3(215,21,68),checkAsteroidCollision,[minus_or_set_subtract(p3(215,44,57),identifier(p3(215,44,53),xPosition),integer(p3(215,56,57),1)),identifier(p3(215,59,68),yPosition)]),if(p5(1,217,21,225,24),definition(p3(218,25,93),checkPower,[identifier(p3(218,36,41),power),add(p3(218,43,93),identifier(p3(218,43,61),'PowerForNormalMove'),identifier(p3(218,64,93),'PowerLossForAsteroidCollision'))]),parallel(p5(1,220,25,222,103),[assign(p3(220,25,92),[identifier(p3(220,25,30),power)],[minus_or_set_subtract(p3(220,34,92),minus_or_set_subtract(p3(220,34,60),identifier(p3(220,34,39),power),identifier(p3(220,42,60),'PowerForNormalMove')),identifier(p3(220,63,92),'PowerLossForAsteroidCollision'))]),assign(p3(221,25,69),[identifier(p3(221,25,43),numberOfCollisions)],[add(p3(221,47,69),identifier(p3(221,47,65),numberOfCollisions),integer(p3(221,68,69),1))]),assign(p3(222,25,64),[identifier(p3(222,25,34),movements)],[insert_tail(p3(222,38,64),identifier(p3(222,38,47),movements),identifier(p3(222,51,64),'MOVE_BACKWARD'))]),assign(p3(222,68,103),[identifier(p3(222,68,81),reportMessage)],[identifier(p3(222,85,103),'ASTEROID_COLLISION')])]),[],assign(p3(224,25,60),[identifier(p3(224,25,38),reportMessage)],[identifier(p3(224,42,60),'INSUFFICIENT_POWER')])),[],parallel(p5(1,227,21,230,108),[assign(p3(227,21,56),[identifier(p3(227,21,26),power)],[minus_or_set_subtract(p3(227,30,56),identifier(p3(227,30,35),power),identifier(p3(227,38,56),'PowerForNormalMove'))]),assign(p3(228,21,47),[identifier(p3(228,21,30),xPosition)],[minus_or_set_subtract(p3(228,34,47),identifier(p3(228,34,43),xPosition),integer(p3(228,46,47),1))]),assign(p3(229,21,81),[identifier(p3(229,21,33),missionRoute)],[insert_tail(p3(229,37,81),identifier(p3(229,37,49),missionRoute),couple(p3(229,54,81),[minus_or_set_subtract(p3(229,54,67),identifier(p3(229,54,63),xPosition),integer(p3(229,66,67),1)),identifier(p3(229,72,81),yPosition)]))]),assign(p3(230,21,60),[identifier(p3(230,21,30),movements)],[insert_tail(p3(230,34,60),identifier(p3(230,34,43),movements),identifier(p3(230,47,60),'MOVE_BACKWARD'))]),assign(p3(230,64,108),[identifier(p3(230,64,77),reportMessage)],[identifier(p3(230,81,108),'SUCCESSFULLY_MOVED_BACKWARD')])])),[],assign(p3(233,17,75),[identifier(p3(233,17,30),reportMessage)],[identifier(p3(233,34,75),'CANNOT_MOVE_BACKWARD_DUE_TO_SPACE_BOUNDRY')])),[],assign(p3(236,13,48),[identifier(p3(236,13,26),reportMessage)],[identifier(p3(236,30,48),'INSUFFICIENT_POWER')])))),operation(p5(1,241,5,281,8),identifier(p5(1,241,5,281,8),'EngageWarpDrive'),[identifier(p3(241,5,18),reportMessage)],[identifier(p3(241,39,51),newXPosition),identifier(p3(241,53,65),newYPosition)],precondition(p5(1,242,5,281,8),conjunct(p5(1,243,9,245,28),conjunct(p5(1,243,9,244,50),conjunct(p5(1,243,9,244,28),member(p3(243,9,39),identifier(p3(243,9,22),reportMessage),identifier(p3(243,25,39),'REPORT_MESSAGE')),member(p3(244,9,28),identifier(p3(244,9,21),newXPosition),nat1_set(p3(244,24,28)))),member(p3(244,31,50),identifier(p3(244,31,43),newYPosition),nat1_set(p3(244,46,50)))),negation(p3(245,9,28),definition(p3(245,13,27),isGameFinished,[]))),if(p5(1,247,9,280,12),definition(p3(248,13,48),checkPower,[identifier(p3(248,24,29),power),identifier(p3(248,31,48),'PowerForWarpDrive')]),if(p5(1,250,13,277,16),definition(p3(251,17,67),checkWithinSpaceRegion,[identifier(p3(251,41,53),newXPosition),identifier(p3(251,55,67),newYPosition)]),if(p5(1,253,17,274,20),conjunct(p3(254,22,73),equal(p3(254,22,46),identifier(p3(254,22,34),newXPosition),identifier(p3(254,37,46),xPosition)),equal(p3(254,49,73),identifier(p3(254,49,61),newYPosition),identifier(p3(254,64,73),yPosition))),assign(p3(256,21,70),[identifier(p3(256,21,34),reportMessage)],[identifier(p3(256,38,70),'CANNOT_WARP_TO_THE_SAME_POSITION')]),[],if(p5(1,258,21,273,24),conjunct(p3(259,26,95),equal(p3(259,26,48),size(p3(259,26,44),identifier(p3(259,31,43),missionRoute)),integer(p3(259,47,48),1)),equal(p3(259,51,95),couple(p3(259,51,78),[identifier(p3(259,51,63),newXPosition),identifier(p3(259,66,78),newYPosition)]),identifier(p3(259,81,95),'StarbaseSquare'))),assign(p3(261,25,79),[identifier(p3(261,25,38),reportMessage)],[identifier(p3(261,42,79),'CANNOT_IMMEDIATELY_WARP_INTO_STARBASE')]),[],if(p5(1,263,25,272,28),definition(p3(264,29,78),checkAsteroidCollision,[identifier(p3(264,52,64),newXPosition),identifier(p3(264,66,78),newYPosition)]),assign(p3(266,29,71),[identifier(p3(266,29,42),reportMessage)],[identifier(p3(266,46,71),'CANNOT_WARP_INTO_ASTEROID')]),[],parallel(p5(1,268,29,271,105),[assign(p3(268,29,63),[identifier(p3(268,29,34),power)],[minus_or_set_subtract(p3(268,38,63),identifier(p3(268,38,43),power),identifier(p3(268,46,63),'PowerForWarpDrive'))]),assign(p3(269,29,54),[identifier(p3(269,29,38),xPosition)],[identifier(p3(269,42,54),newXPosition)]),assign(p3(269,58,83),[identifier(p3(269,58,67),yPosition)],[identifier(p3(269,71,83),newYPosition)]),assign(p3(270,29,91),[identifier(p3(270,29,41),missionRoute)],[insert_tail(p3(270,45,91),identifier(p3(270,45,57),missionRoute),couple(p3(270,62,91),[identifier(p3(270,62,74),newXPosition),identifier(p3(270,79,91),newYPosition)]))]),assign(p3(271,29,65),[identifier(p3(271,29,38),movements)],[insert_tail(p3(271,42,65),identifier(p3(271,42,51),movements),identifier(p3(271,55,65),'WARP_DRIVE'))]),assign(p3(271,69,105),[identifier(p3(271,69,82),reportMessage)],[identifier(p3(271,86,105),'SUCCESSFULLY_WARPED')])])))),[],assign(p3(276,17,66),[identifier(p3(276,17,30),reportMessage)],[identifier(p3(276,34,66),'CANNOT_WARP_DUE_TO_SPACE_BOUNDRY')])),[],assign(p3(279,13,48),[identifier(p3(279,13,26),reportMessage)],[identifier(p3(279,30,48),'INSUFFICIENT_POWER')])))),operation(p5(1,284,5,289,8),identifier(p5(1,284,5,289,8),'MissionStatus'),[identifier(p3(284,5,20),currentLocation),identifier(p3(284,22,34),currentPower),identifier(p3(284,36,54),asteroidCollisions)],[],block(p5(1,285,5,289,8),parallel(p5(1,286,9,288,49),[assign(p3(286,9,51),[identifier(p3(286,9,24),currentLocation)],[couple(p3(286,28,51),[identifier(p3(286,28,37),xPosition),identifier(p3(286,42,51),yPosition)])]),assign(p3(287,9,30),[identifier(p3(287,9,21),currentPower)],[identifier(p3(287,25,30),power)]),assign(p3(288,9,49),[identifier(p3(288,9,27),asteroidCollisions)],[identifier(p3(288,31,49),numberOfCollisions)])]))),operation(p5(1,292,5,295,8),identifier(p5(1,292,5,295,8),'RegionsVisited'),[identifier(p3(292,5,10),route)],[],block(p5(1,293,5,295,8),assign(p3(294,9,30),[identifier(p3(294,9,14),route)],[identifier(p3(294,18,30),missionRoute)]))),operation(p5(1,298,5,301,8),identifier(p5(1,298,5,301,8),'AllMissionMovementsConsumedPower'),[identifier(p3(298,5,17),allMovements)],[],block(p5(1,299,5,301,8),assign(p3(300,9,34),[identifier(p3(300,9,21),allMovements)],[identifier(p3(300,25,34),movements)]))),operation(p5(1,304,5,315,8),identifier(p5(1,304,5,315,8),'DockedAtStarbase'),[identifier(p3(304,5,17),dockedStatus)],[],precondition(p5(1,305,5,315,8),member(p3(306,9,37),identifier(p3(306,9,21),dockedStatus),identifier(p3(306,24,37),'DOCKED_STATUS')),if(p5(1,308,9,314,12),definition(p3(309,14,22),isDocked,[]),assign(p3(311,13,47),[identifier(p3(311,13,25),dockedStatus)],[identifier(p3(311,29,47),'DOCKED_AT_STARBASE')]),[],assign(p3(313,13,51),[identifier(p3(313,13,25),dockedStatus)],[identifier(p3(313,29,51),'NOT_DOCKED_AT_STARBASE')])))),operation(p5(1,318,5,335,8),identifier(p5(1,318,5,335,8),'GameStatus'),[identifier(p3(318,5,11),status)],[],precondition(p5(1,319,5,335,8),member(p3(320,9,29),identifier(p3(320,9,15),status),identifier(p3(320,18,29),'GAME_STATUS')),if(p5(1,322,9,334,12),definition(p3(323,14,22),isDocked,[]),assign(p3(325,13,31),[identifier(p3(325,13,19),status)],[identifier(p3(325,23,31),'GAME_WON')]),[],if(p5(1,327,13,333,16),less(p3(328,18,44),identifier(p3(328,18,23),power),identifier(p3(328,26,44),'PowerForNormalMove')),assign(p3(330,17,36),[identifier(p3(330,17,23),status)],[identifier(p3(330,27,36),'GAME_LOST')]),[],assign(p3(332,17,40),[identifier(p3(332,17,23),status)],[identifier(p3(332,27,40),'GAME_NOT_OVER')])))))])])).
